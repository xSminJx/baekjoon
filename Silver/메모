#include <iostream>
#include <vector>
#include <string>
using namespace std;

int dx[4] = { 1,0,-1,0 };
int dy[4] = { 0,-1,0,1 };

void dfs(vector<vector<int>>& map, vector<string>& v, int i, int j, int n, char c) {
	if (0 <= i && i < n && 0 <= j && j < n && v[i][j] == c) {
		map[i][j] = 1;
		for (int k = 0; k < 4; k++) {
			dfs(map, v, i + dx[k], j + dy[k], n, c);
		}
	}
}

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr), cout.tie(nullptr);

	int n, cnt1 = 0, cnt2 = 0;
	cin >> n;
	vector<vector<int>> map(n, vector<int>(n, 0));
	vector<string> v(n);

	for (int i = 0; i < n; i++) cin >> v[i];
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			if (map[i][j] == 0) {
				dfs(map, v, i, j, n, v[i][j]);
				cnt1++;
			}
		}
	}
	cout << cnt1;
	return 0;
}
